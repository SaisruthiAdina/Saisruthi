

CREATE COMPUTE MODULE Exception_list_Compute1
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		-- CALL CopyMessageHeaders();
	    CALL CopyEntireMessage();
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		DECLARE blobdata BLOB ASBITSTREAM(InputRoot.XMLNSC CCSID InputRoot.Properties.CodedCharSetId ENCODING InputRoot.Properties.Encoding);
		DECLARE Request CHARACTER CAST(blobdata AS CHARACTER CCSID InputRoot.Properties.CodedCharSetId ENCODING InputRoot.Properties.Encoding);
		DECLARE type INTEGER;
		DECLARE text CHARACTER;
		DECLARE ref REFERENCE TO InputExceptionList.*[<];
		WHILE ENDSWITH(FIELDNAME(ref),'Exception') DO			
				SET type = ref.Insert[<].Type;
				SET text = ref.Insert[<].Text;
			MOVE ref LASTCHILD;
		END WHILE;
		SET OutputRoot.JSON.Data.s=InputRoot.XMLNSC;
		DECLARE blobdata1 BLOB ASBITSTREAM(OutputRoot.JSON.Data CCSID InputRoot.Properties.CodedCharSetId ENCODING InputRoot.Properties.Encoding);
		DECLARE Response CHARACTER CAST(blobdata1 AS CHARACTER CCSID InputRoot.Properties.CodedCharSetId ENCODING InputRoot.Properties.Encoding);
		CALL log_1 (ApplicationLabel,Request,Response,type,text);
	END;
END MODULE;
CREATE PROCEDURE log_1 (IN APPLICATION_NAME CHARACTER, IN REQ CHARACTER, IN RESPONSE CHARACTER, IN  EXCEPTION_TYPE INTEGER,IN EXCEPTION_TEXT CHARACTER)
LANGUAGE DATABASE
EXTERNAL NAME "LOG_EXCEPTION" ;	
