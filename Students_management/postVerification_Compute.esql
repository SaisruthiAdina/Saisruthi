

CREATE COMPUTE MODULE postVerification_Compute
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		-- CALL CopyMessageHeaders();
		 CALL CopyEntireMessage();
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;
	CREATE PROCEDURE CopyEntireMessage() BEGIN
		DECLARE ref1 REFERENCE TO InputLocalEnvironment.HTTP.Input.QueryString.S_ID;
		DECLARE ref2 REFERENCE TO InputLocalEnvironment.HTTP.Input.QueryString.PASSWORD_1;
		DECLARE res CHARACTER 'select * from STUDENT_MANAGEMENT where S_ID= ?';
		SET Environment.Variables.data[] = PASSTHRU(res VALUES (ref1));
		IF EXISTS(Environment.Variables.data.*[]) THEN
			IF(Environment.Variables.data.PASSWORD_1 = ref2) THEN
				UPDATE Database.STUDENT_MANAGEMENT AS s SET STUDENT_VERFICATION = 'Verified' WHERE s.S_ID = ref1; 
				SET OutputRoot.XMLNSC.data2 = 'verified' ;
		    ELSE
			   SET OutputRoot.XMLNSC.b = 'Password is not matching ';
			END IF;
		ELSE
			SET OutputRoot.XMLNSC.a ='Id is not present in DB ';				
		END IF;
		
		DECLARE result ROW;
		DECLARE msg CHARACTER;
		DECLARE Query CHARACTER 'select *  from STUDENT_MANAGEMENT';
		SET result.data[] = passthru(Query );
		SET msg = 'HI,'||' '|| result.data.S_NAME ||' '||'VERIFICATION IS SUCCESSFUL...!';
		SET OutputLocalEnvironment.Destination.Email.SMTPServer ='mail.eidiko-india.com:587';
		SET OutputRoot.EmailOutputHeader.From = 'saisruthi.adina@eidiko-india.com';
		SET OutputRoot.EmailOutputHeader.To = result.data.EMAIL_ID;
		SET OutputRoot.BLOB.BLOB = CAST( msg AS BLOB CCSID 1208);
	END;
END MODULE;
