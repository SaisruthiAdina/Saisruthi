

CREATE COMPUTE MODULE JMSInOut_Compute
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		-- CALL CopyMessageHeaders();
		 CALL CopyEntireMessage();
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot.JSON.Data.res = InputRoot.XMLNSC;
		
		DECLARE req REFERENCE TO InputRoot.XMLNSC;
		DECLARE msgid CHARACTER InputRoot.JMSTransport.Transport_Folders.Header_Values.JMSMessageID;
		DECLARE Request BLOB ASBITSTREAM(req ENCODING InputRoot.Properties.Encoding CCSID InputRoot.Properties.CodedCharSetId);
		DECLARE channelreq,hostreq CHARACTER CAST(Request AS CHARACTER CCSID InputRoot.Properties.CodedCharSetId);
		DECLARE TIME_STAMP CHARACTER CURRENT_TIMESTAMP;
		DECLARE ipadd CHARACTER;
		DECLARE Response BLOB ASBITSTREAM(OutputRoot.JSON.Data ENCODING InputRoot.Properties.Encoding CCSID InputRoot.Properties.CodedCharSetId);
		DECLARE channelres,hostres CHARACTER CAST(Response AS CHARACTER CCSID InputRoot.Properties.CodedCharSetId);
		CALL JMS(msgid,channelreq,hostreq,hostres,channelres,ApplicationLabel,MessageFlowLabel,ipadd,TIME_STAMP);
		
	END;
END MODULE;
CREATE PROCEDURE JMS (IN MSG_ID CHARACTER, IN CHANNELREQ CHARACTER, IN HOSTREQ CHARACTER, IN HOSTRES CHARACTER,IN CHANNELRES CHARACTER,IN APPLICATION_NAME CHARACTER, IN MESSAGEFLOW CHARACTER,IN IP_ADD CHARACTER, IN TIMESTAMP_1 CHARACTER )
LANGUAGE DATABASE
EXTERNAL NAME "DB_LOGSPROCEDURE";
